cmake_minimum_required(VERSION 3.29.2)

project(CPP-Game)                       # Defining the project
set(CMAKE_CXX_STANDARD 17)              # Setting C++ standard to C++17
set(CMAKE_VERBOSE_MAKEFILE ON)          # More info when building the project

# SOURCE FILES:
file(GLOB_RECURSE SOURCES "src/*.cpp")

# EXECUTABLE DEFINITION:
add_executable(${PROJECT_NAME} ${SOURCES})
set_target_properties(${PROJECT_NAME} PROPERTIES 
    OUTPUT_NAME "game"
    RUNTIME_OUTPUT_DIRECTORY_DEBUG          "${CMAKE_SOURCE_DIR}/build/debug"
    RUNTIME_OUTPUT_DIRECTORY_RELEASE        "${CMAKE_SOURCE_DIR}/build/release"
)

# COMPILATION OPTIONS AND DEFINITIONS:
target_compile_definitions(${PROJECT_NAME} PRIVATE WORK_DIR="${CMAKE_SOURCE_DIR}")
# Only on Debug configuration we'll define DEBUG_MODE
target_compile_definitions(${PROJECT_NAME} PRIVATE
    $<$<CONFIG:Debug>:DEBUG_MODE>
)

# SEARCHING FOR LIBRARIES:
# set(CMAKE_PREFIX_PATH "/usr/local")     # Setting path for searching for libraries  
# set(BUILD_SHARED_LIBS OFF)              # Ensure static libraries are preferred
find_package(SDL2 REQUIRED)
find_package(SDL2_image OPTIONAL)
find_package(SDL2_ttf REQUIRED)
find_package(Eigen3 REQUIRED)
target_link_libraries(${PROJECT_NAME} PRIVATE SDL2::SDL2 SDL2_image::SDL2_image SDL2_ttf::SDL2_ttf)

# INCLUDES:
include_directories(${EIGEN3_INCLUDE_DIRS})     # Eigen does not have .cmake files that allow us to use target_link_libraries directly
include_directories(${CMAKE_SOURCE_DIR}/src)    # Including our project's headers

# LOGGING:
message(STATUS "Using compiler: ${CMAKE_CXX_COMPILER}")
message(STATUS "C++ Flags: ${CMAKE_CXX_FLAGS}")
message(STATUS "C++ Debug Flags: ${CMAKE_CXX_FLAGS_DEBUG}")
message(STATUS "C++ Release Flags: ${CMAKE_CXX_FLAGS_RELEASE}")
message(STATUS "C++ RelWithDebInfo Flags: ${CMAKE_CXX_FLAGS_RELWITHDEBINFO}")
message(STATUS "C++ MinSizeRel Flags: ${CMAKE_CXX_FLAGS_MINSIZEREL}")


# set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreadedDebug$<$<CONFIG:Debug>:Debug>")
# set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreadedDebug$<$<CONFIG:Release>:Release>")
